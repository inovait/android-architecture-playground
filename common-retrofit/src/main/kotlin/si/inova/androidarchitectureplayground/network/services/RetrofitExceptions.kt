package si.inova.androidarchitectureplayground.network.services

import com.squareup.moshi.JsonDataException
import com.squareup.moshi.JsonEncodingException
import okhttp3.HttpUrl
import okio.IOException
import si.inova.androidarchitectureplayground.common.exceptions.JsonParsingException
import si.inova.androidarchitectureplayground.common.exceptions.NoNetworkException
import si.inova.androidarchitectureplayground.common.exceptions.UnknownCauseException
import si.inova.androidarchitectureplayground.common.outcome.CauseException

/**
 * Transform exception generated by retrofit into semantic [CauseException].
 */
fun Throwable.transformRetrofitException(url: HttpUrl): CauseException {
   return when (this) {
      is CauseException -> this
      is JsonDataException, is JsonEncodingException -> JsonParsingException("Failed to parse $url", cause = this)
      is IOException -> NoNetworkException(cause = this)
      else -> UnknownCauseException("Failed to load $url", cause = this)
   }
}
