stable class ShowkaseMetadata_si_inova_androidarchitectureplayground_user_ui_details {
  <runtime stability> = Stable
}
stable class HomeUsersScreen {
  stable val userListScreen: UserListScreen
  runtime val userDetailsScreen: Screen<UserDetailsScreenKey>
}
stable class UserDetailsScreen {
  unstable val viewModel: UserDetailsViewModel
}
unstable class UserDetailsViewModel {
  unstable val resources: CoroutineResourceManager
  unstable val userRepository: UserRepository
  unstable val actionLogger: ActionLogger
  unstable val _userDetails: MutableStateFlow<Outcome<User>>
  stable var userId: Int?
  <runtime stability> = Unstable
}
stable class UserListScreen {
  unstable val viewModel: UserListViewModel
  stable val navigator: Navigator
}
stable class UserListState {
  stable val users: List<User>
  stable val hasAnyDataLeft: Boolean
  <runtime stability> = 
}
unstable class UserListViewModel {
  unstable val resources: CoroutineResourceManager
  unstable val userRepository: UserRepository
  unstable val actionLogger: ActionLogger
  unstable val _userList: MutableStateFlow<Outcome<UserListState>>
  unstable var userPaginatedList: PaginatedDataStream<List<User>>?
  <runtime stability> = Unstable
}
stable class UserListScreenModule_Companion_ProvidesScreenRegistrationFactory {
  <runtime stability> = Stable
}
stable class UserListScreenModule {
  <runtime stability> = Stable
}
unstable class UserListViewModelBackstackModule_ProvideFromSimpleStackFactory {
  stable val module: UserListViewModelBackstackModule
  unstable val backstack: Provider<Backstack>
  <runtime stability> = Unstable
}
unstable class UserListScreenModule_Companion_ProvidesScreenFactoryFactory {
  unstable val navigatorProvider: Provider<@[JvmSuppressWildcards(suppress = <null>)] Navigator>
  <runtime stability> = Unstable
}
unstable class UserListViewModel_Factory {
  unstable val resources: Provider<CoroutineResourceManager>
  unstable val userRepository: Provider<UserRepository>
  unstable val actionLogger: Provider<ActionLogger>
  <runtime stability> = Unstable
}
stable class UserListViewModelBackstackModule {
  <runtime stability> = Stable
}
unstable class UserListScreenModule_Companion_BindsScreenFactoryToParentTypeFactory {
  unstable val screenFactory: Provider<@[JvmSuppressWildcards(suppress = <null>)] ScreenFactory<UserListScreen>>
  <runtime stability> = Unstable
}
unstable class HomeUsersScreenModule_Companion_BindsScreenFactoryToParentTypeFactory {
  unstable val screenFactory: Provider<@[JvmSuppressWildcards(suppress = <null>)] ScreenFactory<HomeUsersScreen>>
  <runtime stability> = Unstable
}
unstable class HomeUsersScreenModule_Companion_ProvidesScreenFactoryFactory {
  unstable val userListScreenFactory: Provider<@[JvmSuppressWildcards(suppress = <null>)] ScreenFactory<UserListScreen>>
  unstable val userDetailsScreenFactory: Provider<@[JvmSuppressWildcards(suppress = <null>)] ScreenFactory<Screen<UserDetailsScreenKey>>>
  <runtime stability> = Unstable
}
stable class HomeUsersScreenModule {
  <runtime stability> = Stable
}
stable class HomeUsersScreenModule_Companion_ProvidesScreenRegistrationFactory {
  <runtime stability> = Stable
}
stable class UserDetailsViewModelBackstackModule {
  <runtime stability> = Stable
}
stable class UserDetailsScreenModule_Companion_ProvidesScreenFactoryFactory {
  <runtime stability> = Stable
}
unstable class UserDetailsViewModel_Factory {
  unstable val resources: Provider<CoroutineResourceManager>
  unstable val userRepository: Provider<UserRepository>
  unstable val actionLogger: Provider<ActionLogger>
  <runtime stability> = Unstable
}
stable class UserDetailsScreenModule_Companion_ProvidesScreenRegistrationFactory {
  <runtime stability> = Stable
}
stable class UserDetailsScreenModule {
  <runtime stability> = Stable
}
unstable class UserDetailsViewModelBackstackModule_ProvideFromSimpleStackFactory {
  stable val module: UserDetailsViewModelBackstackModule
  unstable val backstack: Provider<Backstack>
  <runtime stability> = Unstable
}
unstable class UserDetailsScreenModule_Companion_BindsScreenFactoryToParentTypeFactory {
  unstable val screenFactory: Provider<@[JvmSuppressWildcards(suppress = <null>)] ScreenFactory<UserDetailsScreen>>
  <runtime stability> = Unstable
}
